diff --git a/arch/arm/boot/dts/overlays/adafruit13m-overlay.dts b/arch/arm/boot/dts/overlays/adafruit13m-overlay.dts
new file mode 100644
index 0000000..c7f8556
--- /dev/null
+++ b/arch/arm/boot/dts/overlays/adafruit13m-overlay.dts
@@ -0,0 +1,85 @@
+/*
+ * adafruit13m-overlay.dts
+ *
+ * -------------------------------------------------
+ * 
+ * -------------------------------------------------
+ * Device---Driver-----BUS       GPIO's
+ * display  adafruit13m  spi0.0    25 9
+
+ * Based on  tinylcd35-overlay.dts
+ *  5/3/2015  -- Noralf Tr√∏nnes     Initial Device tree framework
+ *  10/3/2015 -- tinylcd@gmail.com  added ds1307 support.
+ *  4/2/2018 -- tanji@daitogiken.com SDS Type-C board support.
+ */
+
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "brcm,bcm2835", "brcm,bcm2708", "brcm,bcm2709";
+
+	fragment@0 {
+		target = <&spi0>;
+		__overlay__ {
+			status = "okay";
+
+			spidev@0{
+				status = "disabled";
+			};
+
+			spidev@1{
+				status = "disabled";
+			};
+		};
+	};
+
+	fragment@1 {
+		target = <&gpio>;
+		__overlay__ {
+			adafruit13m_pins: adafruit13m_pins {
+				brcm,pins = <25 9>;
+				brcm,function = <1 1>; /* out */
+			};
+		};
+	};
+
+	fragment@2 {
+		target = <&spi0>;
+		__overlay__ {
+			/* needed to avoid dtc warning */
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			adafruit13m: adafruit13m@0{
+				compatible = "solomon,ssd1306";
+				reg = <0>;
+				pinctrl-names = "default";
+				pinctrl-0 = <&adafruit13m_pins>;
+				spi-max-frequency = <6000000>;
+				buswidth = <8>;
+				fps = <20>;
+				reset-gpios = <&gpio 25 0>;
+				dc-gpios = <&gpio 9 0>;
+				debug = <0>;
+
+			};
+
+		};
+	};
+
+	fragment@3 {
+		target = <&spi0_pins>;
+		__overlay__ {
+			brcm,pins = <10 11>;
+			brcm,function = <4>; /* alt0 */
+		};
+	};
+
+	__overrides__ {
+		speed =      <&adafruit13m>,"spi-max-frequency:0";
+		rotate =     <&adafruit13m>,"rotate:0";
+		fps =        <&adafruit13m>,"fps:0";
+		debug =      <&adafruit13m>,"debug:0";
+	};
+};
diff --git a/arch/arm/boot/dts/overlays/gpio-tactsw-overlay.dts b/arch/arm/boot/dts/overlays/gpio-tactsw-overlay.dts
new file mode 100644
index 0000000..25ed859
--- /dev/null
+++ b/arch/arm/boot/dts/overlays/gpio-tactsw-overlay.dts
@@ -0,0 +1,59 @@
+// Definitions for gpio-tactsw module
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "brcm,bcm2708";
+
+	fragment@0 {
+		// Configure the gpio pin controller
+		target = <&gpio>;
+		__overlay__ {
+			// Define a pinctrl state, that sets up the gpio
+			// as an input with a pullup enabled. This does
+			// not take effect by itself, only when referenced
+			// by a "pinctrl client", as is done below. See:
+			//   https://www.kernel.org/doc/Documentation/devicetree/bindings/pinctrl/pinctrl-bindings.txt
+			//   https://www.kernel.org/doc/Documentation/devicetree/bindings/pinctrl/brcm,bcm2835-gpio.txt
+			pin_state: tact_sw_pins {
+				brcm,pins = <27 22>; // gpio number
+				brcm,function = <0 0>; // 0 = input, 1 = output
+				brcm,pull = <2 2>; // 0 = none, 1 = pull down, 2 = pull up
+			};
+		};
+	};
+
+	fragment@1 {
+		// Add a new device to the /soc devicetree node
+		target-path = "/soc";
+		__overlay__ {
+			tact_sw {
+				// Let the gpio-keys driver handle this device. See:
+				// https://www.kernel.org/doc/Documentation/devicetree/bindings/input/gpio-keys.txt
+				compatible = "gpio-keys";
+
+				// Declare a single pinctrl state (referencing the one declared above) and name it
+				// default, so it is activated automatically.
+				pinctrl-names = "default";
+				pinctrl-0 = <&pin_state>;
+
+				// Enable this device
+				status = "okay";
+
+				autorepeat;
+
+				sw3 {
+					label = "sw3";
+					linux,code = <0x100>;
+					gpios = <&gpio 27 1>;
+				};
+
+				sw4 {
+					label = "sw4";
+					linux,code = <0x101>;
+					gpios = <&gpio 22 1>;
+				};
+			};
+		};
+	};
+};
diff --git a/arch/arm/boot/dts/overlays/i2c-rtc-overlay.dts b/arch/arm/boot/dts/overlays/i2c-rtc-overlay.dts
index 7f11b7c..2958a16 100644
--- a/arch/arm/boot/dts/overlays/i2c-rtc-overlay.dts
+++ b/arch/arm/boot/dts/overlays/i2c-rtc-overlay.dts
@@ -158,6 +158,21 @@
 		};
 	};
 
+	fragment@10 {
+		target = <&i2c_gpio>;
+		__dormant__ {
+			#address-cells = <1>;
+			#size-cells = <0>;
+			status = "okay";
+
+			rx8130: rx8130@32 {
+				compatible = "epson,rx8130";
+				reg = <0x32>;
+				status = "okay";
+			};
+		};
+	};
+
 	__overrides__ {
 		abx80x = <0>,"+0";
 		ds1307 = <0>,"+1";
@@ -169,6 +184,7 @@
 		pcf8523 = <0>,"+7";
 		pcf8563 = <0>,"+8";
 		m41t62 = <0>,"+9";
+		rx8130 = <0>,"+10";
 
 		addr = <&abx80x>, "reg:0",
 		       <&ds1307>, "reg:0",
@@ -179,7 +195,8 @@
 		       <&pcf2127>, "reg:0",
 		       <&pcf8523>, "reg:0",
 		       <&pcf8563>, "reg:0",
-		       <&m41t62>, "reg:0";
+		       <&m41t62>, "reg:0",
+		       <&rx8130>, "reg:0";
 		trickle-diode-type = <&abx80x>,"abracon,tc-diode";
 		trickle-resistor-ohms = <&ds1339>,"trickle-resistor-ohms:0",
 					<&abx80x>,"abracon,tc-resistor";
diff --git a/arch/arm/boot/dts/overlays/sds-typec-overlay.dts b/arch/arm/boot/dts/overlays/sds-typec-overlay.dts
new file mode 100644
index 0000000..8dc24a4
--- /dev/null
+++ b/arch/arm/boot/dts/overlays/sds-typec-overlay.dts
@@ -0,0 +1,145 @@
+/*
+ * sds type-c
+ */
+
+/dts-v1/;
+/plugin/;
+
+/ {
+	compatible = "brcm,bcm2835", "brcm,bcm2708", "brcm,bcm2709";
+
+ 	//
+	// from adafruit13m-overlay.dts
+	// 
+
+	fragment@0 {
+		target = <&spi0>;
+		__overlay__ {
+			status = "okay";
+
+			spidev@0{
+				status = "disabled";
+			};
+
+			spidev@1{
+				status = "disabled";
+			};
+		};
+	};
+
+	fragment@1 {
+		target = <&gpio>;
+		__overlay__ {
+			adafruit13m_pins: adafruit13m_pins {
+				brcm,pins = <25 9>;
+				brcm,function = <1 1>; /* out */
+			};
+		};
+	};
+
+	fragment@2 {
+		target = <&spi0>;
+		__overlay__ {
+			/* needed to avoid dtc warning */
+			#address-cells = <1>;
+			#size-cells = <0>;
+
+			adafruit13m: adafruit13m@0{
+				compatible = "solomon,ssd1306";
+				reg = <0>;
+				pinctrl-names = "default";
+				pinctrl-0 = <&adafruit13m_pins>;
+				spi-max-frequency = <6000000>;
+				buswidth = <8>;
+				fps = <20>;
+				reset-gpios = <&gpio 25 0>;
+				dc-gpios = <&gpio 9 0>;
+				debug = <0>;
+
+			};
+
+		};
+	};
+
+	fragment@3 {
+		target = <&spi0_pins>;
+		__overlay__ {
+			brcm,pins = <10 11>;
+			brcm,function = <4>; /* alt0 */
+		};
+	};
+
+	//
+	// from gpio-tactsw-overlay.dts
+	//
+
+	fragment@4 {
+		// Configure the gpio pin controller
+		target = <&gpio>;
+		__overlay__ {
+			// Define a pinctrl state, that sets up the gpio
+			// as an input with a pullup enabled. This does
+			// not take effect by itself, only when referenced
+			// by a "pinctrl client", as is done below. See:
+			//   https://www.kernel.org/doc/Documentation/devicetree/bindings/pinctrl/pinctrl-bindings.txt
+			//   https://www.kernel.org/doc/Documentation/devicetree/bindings/pinctrl/brcm,bcm2835-gpio.txt
+			pin_state: tact_sw_pins {
+				brcm,pins = <27 22>; // gpio number
+				brcm,function = <0 0>; // 0 = input, 1 = output
+				brcm,pull = <2 2>; // 0 = none, 1 = pull down, 2 = pull up
+			};
+		};
+	};
+
+	fragment@5 {
+		// Add a new device to the /soc devicetree node
+		target-path = "/soc";
+		__overlay__ {
+			tact_sw {
+				// Let the gpio-keys driver handle this device. See:
+				// https://www.kernel.org/doc/Documentation/devicetree/bindings/input/gpio-keys.txt
+				compatible = "gpio-keys";
+
+				// Declare a single pinctrl state (referencing the one declared above) and name it
+				// default, so it is activated automatically.
+				pinctrl-names = "default";
+				pinctrl-0 = <&pin_state>;
+
+				// Enable this device
+				status = "okay";
+
+				autorepeat;
+
+				sw3 {
+					label = "sw3";
+					linux,code = <0x100>;
+					gpios = <&gpio 27 1>;
+				};
+
+				sw4 {
+					label = "sw4";
+					linux,code = <0x101>;
+					gpios = <&gpio 22 1>;
+				};
+			};
+		};
+	};
+
+	fragment@6 {
+		target = <&i2c0>;
+		__overlay__ {
+			at24@50 {
+				compatible = "atmel,24c32";
+				pagesize = <32>;
+				reg = <0x50>;
+			};
+		};
+	};
+
+	__overrides__ {
+		speed =      <&adafruit13m>,"spi-max-frequency:0";
+		rotate =     <&adafruit13m>,"rotate:0";
+		fps =        <&adafruit13m>,"fps:0";
+		debug =      <&adafruit13m>,"debug:0";
+	};
+};
diff --git a/arch/arm/configs/bcm2709_defconfig b/arch/arm/configs/bcm2709_defconfig
index 5d91978..344db93 100644
--- a/arch/arm/configs/bcm2709_defconfig
+++ b/arch/arm/configs/bcm2709_defconfig
@@ -412,7 +412,7 @@ CONFIG_BLK_DEV_NBD=m
 CONFIG_BLK_DEV_RAM=y
 CONFIG_CDROM_PKTCDVD=m
 CONFIG_ATA_OVER_ETH=m
-CONFIG_EEPROM_AT24=m
+CONFIG_EEPROM_AT24=y
 CONFIG_TI_ST=m
 CONFIG_SCSI=y
 # CONFIG_SCSI_PROC_FS is not set
@@ -608,11 +608,11 @@ CONFIG_TTY_PRINTK=y
 CONFIG_HW_RANDOM=y
 CONFIG_RAW_DRIVER=y
 CONFIG_I2C=y
-CONFIG_I2C_CHARDEV=m
+CONFIG_I2C_CHARDEV=y
 CONFIG_I2C_MUX_GPMUX=m
 CONFIG_I2C_MUX_PCA954x=m
 CONFIG_I2C_BCM2708=m
-CONFIG_I2C_BCM2835=m
+CONFIG_I2C_BCM2835=y
 CONFIG_I2C_GPIO=m
 CONFIG_I2C_ROBOTFUZZ_OSIF=m
 CONFIG_I2C_TINY_USB=m
@@ -1251,6 +1251,9 @@ CONFIG_BTRFS_FS=m
 CONFIG_BTRFS_FS_POSIX_ACL=y
 CONFIG_NILFS2_FS=m
 CONFIG_F2FS_FS=y
+CONFIG_F2FS_FS_SECURITY=y
+CONFIG_F2FS_CHECK_FS=y
+CONFIG_F2FS_FS_ENCRYPTION=y
 CONFIG_FANOTIFY=y
 CONFIG_QFMT_V1=m
 CONFIG_QFMT_V2=m
@@ -1358,9 +1361,6 @@ CONFIG_KGDB=y
 CONFIG_KGDB_KDB=y
 CONFIG_KDB_KEYBOARD=y
 CONFIG_CRYPTO_USER=m
-CONFIG_CRYPTO_CBC=y
-CONFIG_CRYPTO_CTS=m
-CONFIG_CRYPTO_XTS=m
 CONFIG_CRYPTO_XCBC=m
 CONFIG_CRYPTO_SHA512=m
 CONFIG_CRYPTO_TGR192=m
diff --git a/arch/arm/configs/bcmrpi_defconfig b/arch/arm/configs/bcmrpi_defconfig
index c491511..d7209d4 100644
--- a/arch/arm/configs/bcmrpi_defconfig
+++ b/arch/arm/configs/bcmrpi_defconfig
@@ -407,7 +407,7 @@ CONFIG_BLK_DEV_NBD=m
 CONFIG_BLK_DEV_RAM=y
 CONFIG_CDROM_PKTCDVD=m
 CONFIG_ATA_OVER_ETH=m
-CONFIG_EEPROM_AT24=m
+CONFIG_EEPROM_AT24=y
 CONFIG_TI_ST=m
 CONFIG_SCSI=y
 # CONFIG_SCSI_PROC_FS is not set
@@ -603,10 +603,10 @@ CONFIG_TTY_PRINTK=y
 CONFIG_HW_RANDOM=y
 CONFIG_RAW_DRIVER=y
 CONFIG_I2C=y
-CONFIG_I2C_CHARDEV=m
+CONFIG_I2C_CHARDEV=y
 CONFIG_I2C_MUX_GPMUX=m
 CONFIG_I2C_MUX_PCA954x=m
-CONFIG_I2C_BCM2708=m
+CONFIG_I2C_BCM2708=y
 CONFIG_I2C_BCM2835=m
 CONFIG_I2C_GPIO=m
 CONFIG_I2C_ROBOTFUZZ_OSIF=m
@@ -1244,6 +1244,9 @@ CONFIG_BTRFS_FS=m
 CONFIG_BTRFS_FS_POSIX_ACL=y
 CONFIG_NILFS2_FS=m
 CONFIG_F2FS_FS=y
+CONFIG_F2FS_FS_SECURITY=y
+CONFIG_F2FS_CHECK_FS=y
+CONFIG_F2FS_FS_ENCRYPTION=y
 CONFIG_FANOTIFY=y
 CONFIG_QFMT_V1=m
 CONFIG_QFMT_V2=m
@@ -1351,9 +1354,6 @@ CONFIG_KGDB_KDB=y
 CONFIG_KDB_KEYBOARD=y
 CONFIG_CRYPTO_USER=m
 CONFIG_CRYPTO_CRYPTD=m
-CONFIG_CRYPTO_CBC=y
-CONFIG_CRYPTO_CTS=m
-CONFIG_CRYPTO_XTS=m
 CONFIG_CRYPTO_XCBC=m
 CONFIG_CRYPTO_SHA512=m
 CONFIG_CRYPTO_TGR192=m
